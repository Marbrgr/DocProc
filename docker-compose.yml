version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: docuai_postgres
    environment:
      POSTGRES_DB: docuai
      POSTGRES_USER: docuai_user
      POSTGRES_PASSWORD: docuai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docuai_user -d docuai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: docuai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: docuai_backend
    environment:
      - DATABASE_URL=postgresql://docuai_user:docuai_password@postgres:5432/docuai
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - UPLOAD_DIR=/app/uploads
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - vector_data:/app/langchain_vector_db
      - openai_vectors:/app/openai_direct_vectors
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: docuai_celery
    command: celery -A app.celery_config worker --loglevel=info --concurrency=2
    environment:
      - DATABASE_URL=postgresql://docuai_user:docuai_password@postgres:5432/docuai
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - UPLOAD_DIR=/app/uploads
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - vector_data:/app/langchain_vector_db
      - openai_vectors:/app/openai_direct_vectors
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: docuai_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  # Flower (Celery monitoring) - Optional
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: docuai_flower
    command: celery -A app.celery_config flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  uploads_data:
  vector_data:
  openai_vectors:

networks:
  default:
    name: docuai_network 